[{"/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/index.js":"1","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/components/Footer.js":"2","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/contact/contact.js":"3","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/blogs/adminBlogs.js":"4","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/blogs/blogs.js":"5","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/blogs/blogComp.js":"6","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/blogs/blogDelete.js":"7","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/blogs/blogUpdate.js":"8","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/hearts/hearts.js":"9","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/mentoring/mentoring.js":"10","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/users/Login.js":"11","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/blogs/adminBlogList.js":"12","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/components/strapLine.js":"13","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/users/SignUp.js":"14","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/blogs/BlogList.js":"15","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/components/nav.js":"16","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/declaration/declaration.js":"17","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/wholeness/wholeness.js":"18","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/App.js":"19","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/resources/resources.js":"20"},{"size":2095,"mtime":1610537598282,"results":"21","hashOfConfig":"22"},{"size":2181,"mtime":1610543828492,"results":"23","hashOfConfig":"22"},{"size":3146,"mtime":1610537598290,"results":"24","hashOfConfig":"22"},{"size":478,"mtime":1610537598282,"results":"25","hashOfConfig":"22"},{"size":453,"mtime":1610537598284,"results":"26","hashOfConfig":"22"},{"size":2573,"mtime":1610537598283,"results":"27","hashOfConfig":"22"},{"size":1672,"mtime":1610537598283,"results":"28","hashOfConfig":"22"},{"size":3515,"mtime":1610537598283,"results":"29","hashOfConfig":"22"},{"size":1767,"mtime":1610537598292,"results":"30","hashOfConfig":"22"},{"size":4395,"mtime":1610537598293,"results":"31","hashOfConfig":"22"},{"size":2770,"mtime":1610573768388,"results":"32","hashOfConfig":"22"},{"size":4694,"mtime":1610537598282,"results":"33","hashOfConfig":"22"},{"size":1130,"mtime":1610537598232,"results":"34","hashOfConfig":"22"},{"size":3119,"mtime":1610543609805,"results":"35","hashOfConfig":"22"},{"size":1982,"mtime":1610543196241,"results":"36","hashOfConfig":"22"},{"size":2702,"mtime":1610617964335,"results":"37","hashOfConfig":"22"},{"size":23188,"mtime":1610537598291,"results":"38","hashOfConfig":"22"},{"size":267,"mtime":1610537598296,"results":"39","hashOfConfig":"22"},{"size":1879,"mtime":1610574148465,"results":"40","hashOfConfig":"22"},{"size":7632,"mtime":1610618554800,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"1u1osyw",{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/index.js",["88"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Nav from './components/nav';\nimport MyForm from './pages/contact/contact';\nimport {\n  BrowserRouter as Router, Route, Link\n} from 'react-router-dom';\nimport './assets/fonts/webfontkit-JosefinSans/stylesheet.css';\nimport './assets/fonts/webfontkit-buttermilkFarmhouse/stylesheet.css';\nimport './assets/treasures.css';\n\n\nimport Blogs from './pages/blogs/blogs';\nimport AdminBlogs from './pages/blogs/adminBlogs';\nimport BlogComp from './pages/blogs/blogComp';\nimport BlogDetail from './pages/blogs/blogDetail';\nimport BlogDelete from './pages/blogs/blogDelete';\nimport BlogUpdate from './pages/blogs/blogUpdate';\nimport myDeclaration from './pages/declaration/declaration';\nimport ourHearts from './pages/hearts/hearts';\nimport myMentor from './pages/mentoring/mentoring';\nimport Resources from './pages/resources/resources';\nimport Whole from './pages/wholeness/wholeness';\nimport SignUp from './pages/users/SignUp';\nimport Login from './pages/users/Login';\nimport Footer from './components/Footer';\nimport './components/nav.css';\n\n\nconst Pages = () => (\n  <Router>\n    <Nav />\n    {/* <hr /> */}\n    <Route exact path=\"/\" component={App} />\n    <Route path=\"/Contact\" component={MyForm} />\n    <Route path=\"/Blogs\" component={Blogs} />\n    <Route path=\"/AdminBlogs\" component={AdminBlogs} />\n    <Route path=\"/BlogComp\" component={BlogComp} />\n    <Route path=\"/BlogDetail/:id\" component={BlogDetail} />\n    <Route path=\"/BlogUpdate/:id\" component={BlogUpdate} />\n    <Route path=\"/BlogDelete/:id\" component={BlogDelete} />\n    <Route path=\"/Declaration\" component={myDeclaration} />\n    <Route path=\"/Hearts\" component={ourHearts} />\n    <Route path=\"/Mentoring\" component={myMentor} />\n    <Route path=\"/Resources\" component={Resources} />\n    <Route path=\"/Wholeness\" component={Whole} />\n    <Route path=\"/SignUp\" component={SignUp} />\n    <Route path=\"/Login\" component={Login} />\n\n    <Footer />\n\n\n  </Router>\n);\n\nReactDOM.render(<Pages />, document.getElementById('root'));",["89","90"],"/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/components/Footer.js",["91","92"],"import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"./Footer.css\";\nimport Logo from \"./../images/TreasuresFin.png\";\n\n\n\nconst currentDate = new Date();\nconst year = currentDate.getFullYear();\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <div className=\"container-fluid\">\n\n          <div className=\"row\">\n\n            <div className=\"col\">\n              <div className=\"col-1-2\">\n                <h4 className=\"col-title\">About</h4>\n                <ul className=\"footer-menu list-unstyled\">\n                  <li>\n                    <Link className=\"text-link\" to=\"../hearts\">\n                      Our Hearts\n                  </Link>\n                  </li>\n\n                  <li>\n                    <Link className=\"text-link\" to=\"../declaration\">\n                      Declarations\n                  </Link>{\" \"}\n                    <a href='/Declarations.pdf' download className=\"badge badge-info badge-sm\">Download</a>\n                    {/* <span className=\"badge badge-info badge-sm\">Download</span> */}\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n            <div className=\"col\">\n              <div className=\"navbar-footer\">\n                <img src={Logo} className=\"navbar-brand-footer\" alt=\"Treasures Logo\"></img>\n              </div>\n              <small className=\"copyright\">Treasures @ {year} </small>\n            </div>\n\n            <div className=\"col\">\n              <div className=\"col-1-2\">\n                <h4 className=\"col-title\">Contact</h4>\n                <ul className=\"footer-menu list-unstyled\">\n                  <li>\n                    <Link className=\"text-link\" to=\"../contact\">\n                      Contact Us\n                  </Link>\n                    <li>\n                      <Link className=\"text-link\" to=\"/Login\">\n                        Login\n                  </Link>\n                    </li>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/contact/contact.js",[],"/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/blogs/adminBlogs.js",["93","94"],"/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/blogs/blogs.js",["95","96"],"import React from 'react';\nimport BlogList from './BlogList';\n// When Router and Route are removed the link fails ---------------------------------- ???\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport './blogs.css';\n\nfunction Blogs() {\n  return (\n    <div className=\"blogContainer\">\n      <div >\n        <Link to=\"/adminBlogs\">Administration</Link>\n      </div>\n      <BlogList />\n    </div>\n  )\n}\n\nexport default Blogs;\n","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/blogs/blogComp.js",["97"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Calendar from \"../../components/calendar\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction BlogComp() {\n    let history = useHistory();\n    var [title, setTitle] = useState(\"\");\n    var [description, setDescription] = useState(\"\");\n    var [mainBody, setMainBody] = useState(\"\");\n    var [date, setDate] = useState(new Date());\n\n    const handleSubmit = async (e) => {\n        e.preventDefault() // used for the history.push at the end of this section of code\n        let newBlogData = await fetch(\"http://localhost:4000/blogs/\", { \n            //\n            // ----------------  Need to add some data checking that all fields have data and that the date field is correctly formatted.\n            //\n            method: \"POST\",\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ title, description, mainBody, date })\n        })\n        let newBlog = newBlogData.json();\n        console.log(newBlog);\n        history.push(\"/adminBlogs\"); // trying to redirect to the blogs page -- NOT WORKING ---------------- ??????????????????\n    }\n\n    return (\n        <div className=\"blogUpdateContainer\">\n            <form onSubmit={handleSubmit}>\n                <lable for=\"titleN\" >Title: </lable><br></br>\n                <input type=\"text\" id=\"titleN\" name=\"titleN\" onChange={e => setTitle(e.target.value)} size=\"50\"/><br></br>\n                <lable for=\"descN\" >Description: </lable><br></br>\n                <textarea id=\"descN\" name=\"descN\" onChange={e => setDescription(e.target.value)} rows=\"2\" cols=\"80\"></textarea><br></br>\n                {/* <input type=\"text\" onChange={e => setDescription(e.target.value)} size=\"60\"/><br></br> */}\n                <lable for=\"bodyN\" >Main Body: </lable><br></br>\n                <textarea id=\"bodyN\" name=\"bodyN\" onChange={e => setMainBody(e.target.value)} rows=\"10\" cols=\"130\"></textarea><br></br>\n                {/* <texta type=\"text\" onChange={e => setMainBody(e.target.value)} /><br></br> */}\n                <lable for=\"dateN\" >Date: </lable><br></br>\n                {/* <input id=\"dateN\" name=\"dateN\" type=\"date\" onChange={e => setDate(e.target.value)} /> */}\n                <DatePicker selected={date} onChange={date => setDate(date)}></DatePicker>\n                <br></br><br></br>\n                <input type=\"submit\" />\n            </form>\n            {/* <Calendar /> */}\n        </div>\n    )\n}\n\nexport default BlogComp;","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/blogs/blogDelete.js",[],"/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/blogs/blogUpdate.js",["98","99","100","101"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useParams } from \"react-router\";\nimport Calendar from \"../../components/calendar\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction formatDate(date) {\n  var theDate = new Date(date);\n  var dd = theDate.getDate();\n  var mm = theDate.getMonth() + 1;\n  var yyyy = theDate.getFullYear();\n  if (dd < 10) {dd = '0' + dd;}\n  if (mm < 10) {mm = '0' + mm;}\n  // theDate = dd + '/' + mm + '/' + yyyy;\n  theDate = yyyy + '-' + mm + '-' + dd;\n  // console.log(theDate);\n  return theDate;\n}\n\nfunction BlogUpdate() {\n  let history = useHistory();\n  let { id } = useParams();\n  var [blog, setBlog] = useState([]);\n  var [title, setTitle] = useState(\"\");\n  var [description, setDescription] = useState(\"\");\n  var [mainBody, setMainBody] = useState(\"\");\n  var [date, setDate] = useState(\"\");\n\n// -------------------------------- Warning react hook useEffect has a missing dependency 'id' ------- ????????\n  useEffect(() => {\n    const getBlogById = async () => {\n      let blogData = await fetch(`http://localhost:4000/blogs/${id}`)\n      let blg = await blogData.json(); // used blg not blog so as not confuse with the blog var set at the top.\n      console.log(blg.data.blog);\n      \n      setTitle(blg.data.blog.title);\n      setDescription(blg.data.blog.description);\n      setMainBody(blg.data.blog.mainBody);\n      // setDate(blg.data.blog.date);\n      setDate(formatDate(blg.data.blog.date));\n\n    }\n    getBlogById();\n  }, [id]);\n\n  // setTitle[blog.title];\n  // setDescription[blog.description];\n  // setMainBody[blog.mainBody];\n  // setDate[blog.date];\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    let newBlogData = await fetch(`http://localhost:4000/blogs/${id}`, { \n        //\n        // ----------------  Need to add some data checking that all fields have data and that the date field is correctly formatted.\n        //\n        method: \"PUT\",\n        headers: { 'Content-Type': 'application/json',\n                    'Accept': 'application/json' },\n        body: JSON.stringify({ title, description, mainBody, date })\n    })\n    let newBlog = newBlogData.json();\n    console.log(newBlog);\n    history.push(\"/adminBlogs\");\n}\n\n  return (\n    <div className=\"blogUpdateContainer\">\n      <p>Blog Update for ID: {id}</p>\n      <form onSubmit={handleSubmit}>\n        <lable for=\"titleN\" >Title: </lable><br></br>\n        <input type=\"text\" id=\"titleN\" name=\"titleN\" onChange={e => setTitle(e.target.value)} size=\"50\" value={title}/><br></br>\n        <lable for=\"descN\">Description: </lable><br></br>\n        <textarea id=\"descN\" name=\"descN\" onChange={e => setDescription(e.target.value)} rows=\"2\" cols=\"80\" value={description}></textarea><br></br>\n        {/* <input type=\"text\" onChange={e => setDescription(e.target.value)} size=\"60\"/><br></br> */}\n        <lable for=\"bodyN\">Main Body: </lable><br></br>\n        <textarea id=\"bodyN\" name=\"bodyN\" onChange={e => setMainBody(e.target.value)} rows=\"10\" cols=\"130\" value={mainBody}></textarea><br></br>\n        {/* <texta type=\"text\" onChange={e => setMainBody(e.target.value)} /><br></br> */}\n        <lable for=\"dateN\">Date: </lable><br></br>\n        <input id=\"dateN\" name=\"dateN\"  type=\"date\" onChange={e => setDate(e.target.value)} value={date}/><br></br><br></br>\n        <input type=\"submit\" />\n      </form>\n      {/* <Calendar /> */}\n    </div>\n  )\n}\n\nexport default BlogUpdate;","/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/hearts/hearts.js",["102"],"/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/mentoring/mentoring.js",["103"],"/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/users/Login.js",["104","105"],"/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/blogs/adminBlogList.js",[],"/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/components/strapLine.js",[],"/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/users/SignUp.js",["106"],"/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/blogs/BlogList.js",[],"/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/components/nav.js",["107","108"],"/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/declaration/declaration.js",["109"],"/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/wholeness/wholeness.js",[],"/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/App.js",["110","111"],"/Users/peterwaller/Desktop/FinalProject/treasures-web-frontend/src/pages/resources/resources.js",["112"],{"ruleId":"113","severity":1,"message":"114","line":8,"column":35,"nodeType":"115","messageId":"116","endLine":8,"endColumn":39},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"113","severity":1,"message":"121","line":2,"column":27,"nodeType":"115","messageId":"116","endLine":2,"endColumn":33},{"ruleId":"113","severity":1,"message":"122","line":2,"column":35,"nodeType":"115","messageId":"116","endLine":2,"endColumn":40},{"ruleId":"113","severity":1,"message":"121","line":4,"column":27,"nodeType":"115","messageId":"116","endLine":4,"endColumn":33},{"ruleId":"113","severity":1,"message":"122","line":4,"column":35,"nodeType":"115","messageId":"116","endLine":4,"endColumn":40},{"ruleId":"113","severity":1,"message":"121","line":4,"column":27,"nodeType":"115","messageId":"116","endLine":4,"endColumn":33},{"ruleId":"113","severity":1,"message":"122","line":4,"column":35,"nodeType":"115","messageId":"116","endLine":4,"endColumn":40},{"ruleId":"113","severity":1,"message":"123","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":16},{"ruleId":"113","severity":1,"message":"123","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":16},{"ruleId":"113","severity":1,"message":"124","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":18},{"ruleId":"113","severity":1,"message":"125","line":24,"column":8,"nodeType":"115","messageId":"116","endLine":24,"endColumn":12},{"ruleId":"113","severity":1,"message":"126","line":24,"column":14,"nodeType":"115","messageId":"116","endLine":24,"endColumn":21},{"ruleId":"127","severity":1,"message":"128","line":8,"column":17,"nodeType":"129","endLine":8,"endColumn":78},{"ruleId":"127","severity":1,"message":"128","line":12,"column":17,"nodeType":"129","endLine":12,"endColumn":81},{"ruleId":"130","severity":1,"message":"131","line":32,"column":17,"nodeType":"132","messageId":"133","endLine":32,"endColumn":24},{"ruleId":"134","severity":1,"message":"135","line":46,"column":93,"nodeType":"136","endLine":46,"endColumn":99},{"ruleId":"134","severity":1,"message":"135","line":54,"column":93,"nodeType":"136","endLine":54,"endColumn":99},{"ruleId":"113","severity":1,"message":"121","line":2,"column":27,"nodeType":"115","messageId":"116","endLine":2,"endColumn":33},{"ruleId":"113","severity":1,"message":"122","line":2,"column":35,"nodeType":"115","messageId":"116","endLine":2,"endColumn":40},{"ruleId":"134","severity":1,"message":"135","line":9,"column":36,"nodeType":"136","endLine":9,"endColumn":61},{"ruleId":"134","severity":1,"message":"135","line":6,"column":32,"nodeType":"136","endLine":6,"endColumn":47},{"ruleId":"127","severity":1,"message":"128","line":30,"column":9,"nodeType":"129","endLine":30,"endColumn":66},{"ruleId":"134","severity":1,"message":"135","line":94,"column":34,"nodeType":"136","endLine":94,"endColumn":59},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["137"],"no-negated-in-lhs",["138"],"'Router' is defined but never used.","'Route' is defined but never used.","'Calendar' is defined but never used.","'DatePicker' is defined but never used.","'blog' is assigned a value but never used.","'setBlog' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]