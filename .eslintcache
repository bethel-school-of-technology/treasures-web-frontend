[{"E:\\Treasures Website\\treasures-web-frontend\\src\\components\\nav.js":"1","E:\\Treasures Website\\treasures-web-frontend\\src\\components\\Footer.js":"2","E:\\Treasures Website\\treasures-web-frontend\\src\\App.js":"3","E:\\Treasures Website\\treasures-web-frontend\\src\\pages\\declaration\\declaration.js":"4","E:\\Treasures Website\\treasures-web-frontend\\src\\pages\\blogs\\blogComp.js":"5","E:\\Treasures Website\\treasures-web-frontend\\src\\pages\\contact\\contact.js":"6","E:\\Treasures Website\\treasures-web-frontend\\src\\index.js":"7","E:\\Treasures Website\\treasures-web-frontend\\src\\pages\\blogs\\BlogList.js":"8"},{"size":1982,"mtime":1607031718601,"results":"9","hashOfConfig":"10"},{"size":1207,"mtime":1607031718600,"results":"11","hashOfConfig":"10"},{"size":814,"mtime":1607031718597,"results":"12","hashOfConfig":"10"},{"size":302,"mtime":1607031718608,"results":"13","hashOfConfig":"10"},{"size":1995,"mtime":1607031718604,"results":"14","hashOfConfig":"10"},{"size":1618,"mtime":1607621342062,"results":"15","hashOfConfig":"10"},{"size":1124,"mtime":1607621452198,"results":"16","hashOfConfig":"10"},{"size":1433,"mtime":1607031718603,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1dbvg1m",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Treasures Website\\treasures-web-frontend\\src\\components\\nav.js",["36","37"],"E:\\Treasures Website\\treasures-web-frontend\\src\\components\\Footer.js",[],["38","39"],"E:\\Treasures Website\\treasures-web-frontend\\src\\App.js",[],"E:\\Treasures Website\\treasures-web-frontend\\src\\pages\\declaration\\declaration.js",[],"E:\\Treasures Website\\treasures-web-frontend\\src\\pages\\blogs\\blogComp.js",["40","41","42"],"import React, { useState, useEffect } from 'react';\r\n\r\n\r\nfunction BlogComp() {\r\n\r\n    var [blogs, setBlogs] = useState([]);\r\n    var [blog, setBlog] = useState({});\r\n\r\n    var [title, setTitle] = useState(\"\");\r\n    var [description, setDescription] = useState(\"\");\r\n    var [mainBody, setMainBody] = useState(\"\");\r\n    var [date, setDate] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const getAllBlogs = async () => {\r\n            let blogsData = await fetch(\"http://localhost:4000/blogs/\")\r\n            let blg = await blogsData.json(); // used blg not blog so as not confuse with the blog var set at the top.\r\n            console.log(blg.data.blogs);\r\n            setBlogs(blg.data.blogs);\r\n        }\r\n        getAllBlogs();\r\n    }, [])\r\n\r\n    const handleSubmit = async () => {\r\n        let newBlogData = await fetch(\"http://localhost:4000/blogs/\", {\r\n            //\r\n            // ----------------  Need to add some data checking that all fields have data and that the date field is correctly formatted.\r\n            //\r\n            method: \"POST\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ title, description, mainBody, date })\r\n        })\r\n        let newBlog = newBlogData.json();\r\n        console.log(newBlog);\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <form onSubmit={handleSubmit}>\r\n                <lable>Title: </lable>\r\n                <input type=\"text\" onChange={e => setTitle(e.target.value)} />\r\n                <lable>Description: </lable>\r\n                <input type=\"text\" onChange={e => setDescription(e.target.value)} />\r\n                <lable>Main Body: </lable>\r\n                <input type=\"text\" onChange={e => setMainBody(e.target.value)} />\r\n                <lable>Date: </lable>\r\n                <input type=\"text\" onChange={e => setDate(e.target.value)} />\r\n                <input type=\"submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default BlogComp;","E:\\Treasures Website\\treasures-web-frontend\\src\\pages\\contact\\contact.js",["43"],"E:\\Treasures Website\\treasures-web-frontend\\src\\index.js",[],"E:\\Treasures Website\\treasures-web-frontend\\src\\pages\\blogs\\BlogList.js",["44"],{"ruleId":"45","severity":1,"message":"46","line":2,"column":27,"nodeType":"47","messageId":"48","endLine":2,"endColumn":33},{"ruleId":"45","severity":1,"message":"49","line":2,"column":35,"nodeType":"47","messageId":"48","endLine":2,"endColumn":40},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"45","severity":1,"message":"54","line":6,"column":10,"nodeType":"47","messageId":"48","endLine":6,"endColumn":15},{"ruleId":"45","severity":1,"message":"55","line":7,"column":10,"nodeType":"47","messageId":"48","endLine":7,"endColumn":14},{"ruleId":"45","severity":1,"message":"56","line":7,"column":16,"nodeType":"47","messageId":"48","endLine":7,"endColumn":23},{"ruleId":"45","severity":1,"message":"57","line":29,"column":15,"nodeType":"47","messageId":"48","endLine":29,"endColumn":19},{"ruleId":"58","severity":1,"message":"59","line":31,"column":19,"nodeType":"60","endLine":31,"endColumn":59},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","no-native-reassign",["61"],"no-negated-in-lhs",["62"],"'blogs' is assigned a value but never used.","'blog' is assigned a value but never used.","'setBlog' is assigned a value but never used.","'form' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]